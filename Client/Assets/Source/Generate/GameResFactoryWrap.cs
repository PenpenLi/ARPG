//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameResFactoryWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameResFactory), typeof(System.Object));
		L.RegFunction("Instance", Instance);
		L.RegFunction("GetResSprite", GetResSprite);
		L.RegFunction("GetUIPrefab", GetUIPrefab);
		L.RegFunction("GetUIPrefabByIdentification", GetUIPrefabByIdentification);
		L.RegFunction("GetResourcesPrefab", GetResourcesPrefab);
		L.RegFunction("GetResourcesPrefabByIdentification", GetResourcesPrefabByIdentification);
		L.RegFunction("DestroyUIPrefab", DestroyUIPrefab);
		L.RegFunction("GetUIEffect", GetUIEffect);
		L.RegFunction("DestroyUIEffect", DestroyUIEffect);
		L.RegFunction("DestroyAllUIEffect", DestroyAllUIEffect);
		L.RegFunction("DestroyOldChid", DestroyOldChid);
		L.RegFunction("ReadFile", ReadFile);
		L.RegFunction("SetInt", SetInt);
		L.RegFunction("GetInt", GetInt);
		L.RegFunction("ClearInt", ClearInt);
		L.RegFunction("SetString", SetString);
		L.RegFunction("GetString", GetString);
		L.RegFunction("CloseUIOnTouch", CloseUIOnTouch);
		L.RegFunction("OnOneTouch", OnOneTouch);
		L.RegFunction("QiutGame", QiutGame);
		L.RegFunction("CheckTouchNum", CheckTouchNum);
		L.RegFunction("OnTwoTouch", OnTwoTouch);
		L.RegFunction("CheckMapDrag", CheckMapDrag);
		L.RegFunction("OnTouch", OnTouch);
		L.RegFunction("OnTouchSmall", OnTouchSmall);
		L.RegFunction("LoadLevel", LoadLevel);
		L.RegFunction("LoadedLevelName", LoadedLevelName);
		L.RegFunction("ApplicationQiut", ApplicationQiut);
		L.RegFunction("LoadAudioClip", LoadAudioClip);
		L.RegFunction("ChecKkName", ChecKkName);
		L.RegFunction("UIDestroyFunc", UIDestroyFunc);
		L.RegFunction("UIActiveFunc", UIActiveFunc);
		L.RegFunction("LoadMaterial", LoadMaterial);
		L.RegFunction("SetOnGetFocusCallBack", SetOnGetFocusCallBack);
		L.RegFunction("New", _CreateGameResFactory);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameResFactory(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameResFactory obj = new GameResFactory();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameResFactory.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Instance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			GameResFactory o = GameResFactory.Instance();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Sprite o = obj.GetResSprite(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUIPrefab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Transform));
			LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.GetUIPrefab(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUIPrefabByIdentification(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Transform));
			LuaTable arg2 = ToLua.CheckLuaTable(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			object arg4 = ToLua.ToVarObject(L, 6);
			obj.GetUIPrefabByIdentification(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourcesPrefab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Transform));
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.GetResourcesPrefab(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourcesPrefabByIdentification(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Transform));
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			object arg3 = ToLua.ToVarObject(L, 5);
			obj.GetResourcesPrefabByIdentification(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyUIPrefab(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.DestroyUIPrefab(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUIEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.GetUIEffect(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyUIEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.DestroyUIEffect(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyAllUIEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			obj.DestroyAllUIEffect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyOldChid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.DestroyOldChid(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.ReadFile(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetInt(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.GetInt(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			obj.ClearInt(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SetString(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetString(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseUIOnTouch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.CloseUIOnTouch(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnOneTouch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.OnOneTouch(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int QiutGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.QiutGame(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckTouchNum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.CheckTouchNum(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTwoTouch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.OnTwoTouch(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckMapDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.CheckMapDrag(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTouch(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.OnTouch(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTouchSmall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.OnTouchSmall(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			obj.LoadLevel(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadedLevelName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			int o = obj.LoadedLevelName();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ApplicationQiut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			obj.ApplicationQiut();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAudioClip(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.AudioSource arg0 = (UnityEngine.AudioSource)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.AudioSource));
			string arg1 = ToLua.CheckString(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.LoadAudioClip(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChecKkName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			string arg0 = ToLua.CheckString(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			obj.ChecKkName(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIDestroyFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 4);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 5);
			obj.UIDestroyFunc(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIActiveFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.UIActiveFunc(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadMaterial(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			UnityEngine.UI.Image arg0 = (UnityEngine.UI.Image)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.UI.Image));
			string arg1 = ToLua.CheckString(L, 3);
			obj.LoadMaterial(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetOnGetFocusCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameResFactory obj = (GameResFactory)ToLua.CheckObject(L, 1, typeof(GameResFactory));
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.SetOnGetFocusCallBack(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

